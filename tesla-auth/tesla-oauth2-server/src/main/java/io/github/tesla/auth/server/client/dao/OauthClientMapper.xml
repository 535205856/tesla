<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.github.tesla.auth.server.client.dao.OauthClientMapper">

    <select id="get" resultType="io.github.tesla.auth.server.oauth.domian.oauth.ClientDetails">
        select * from oauth_client_details where  client_id = #{value}

	</select>

    <select id="list" resultType="io.github.tesla.auth.server.oauth.domian.oauth.ClientDetails">
        select * from oauth_client_details
        <where>
            <if test="clientId != null">and client_id = #{clientId}</if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from oauth_client_details
        <where>
            <if test="clientId != null">and client_id = #{clientId}</if>
        </where>
    </select>

    <insert id="save" parameterType="io.github.tesla.auth.server.oauth.domian.oauth.ClientDetails"
            useGeneratedKeys="true" keyProperty="id">
		INSERT INTO oauth_client_details (
			client_id,
			client_secret,
			client_name,
			client_uri,
			client_icon_uri,
			resource_ids,
			scope,
			grant_types,
			redirect_uri,
			roles,
			access_token_validity,
			refresh_token_validity,
			description,
			archived,
			trusted,
			create_time
		)
		VALUES
		(
			#{clientId},
			#{clientSecret},
			#{clientName},
			#{clientUri},
			#{clientIconUri},
			#{resourceIds},
			#{scope},
			#{grantTypes},
			#{redirectUri},
			#{roles},
			#{accessTokenValidity},
			#{refreshTokenValidity},
			#{description},
			#{archived},
			#{trusted},
			#{createTime}
		)
	</insert>

    <update id="update" parameterType="io.github.tesla.auth.server.system.domain.UserDO">
        update oauth_client_details
        <set>
            <if test="clientSecret != null and clientSecret != ''">client_secret = #{clientSecret},</if>
            <if test="clientName != null and clientName != ''">client_name = #{clientName},</if>
            <if test="clientUri != null and clientUri != ''">client_uri = #{clientUri},</if>
            <if test="clientIconUri != null and clientIconUri != ''">client_icon_uri = #{clientIconUri},</if>
            <if test="resourceIds != null and resourceIds != ''">resource_ids = #{resourceIds},</if>
            <if test="scope != null and scope != ''">scope = #{scope},</if>
            <if test="grantTypes != null and grantTypes != ''">grant_types = #{grantTypes},</if>
            <if test="redirectUri != null and redirectUri != ''">redirect_uri = #{redirectUri},</if>
            <if test="accessTokenValidity != null ">access_token_validity = #{accessTokenValidity},</if>
            <if test="refreshTokenValidity != null ">refresh_token_validity = #{refreshTokenValidity},</if>
            <if test="description != null and description != ''">description = #{description},</if>
            <if test="archived != null ">archived = #{archived},</if>
            <if test="trusted != null ">trusted = #{trusted},</if>
        </set>
        where client_id = #{clientId}
    </update>

    <delete id="remove">
		delete from oauth_client_details where  client_id = #{value}
	</delete>

</mapper>